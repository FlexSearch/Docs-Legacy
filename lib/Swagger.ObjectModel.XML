<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Swagger.ObjectModel</name>
    </assembly>
    <members>
        <member name="T:Swagger.ObjectModel.ApiKeyLocations">
            <summary>
            The api key locations.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.ApiKeyLocations.Query">
            <summary>
            The query.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.ApiKeyLocations.Header">
            <summary>
            The header.
            </summary>
        </member>
        <member name="T:Swagger.ObjectModel.Builders.ApiKeySecuritySchemeBuilder">
            <summary>
            The api key security scheme builder.
            </summary>
        </member>
        <member name="T:Swagger.ObjectModel.Builders.SecuritySchemeBuilder">
            <summary>
            The security scheme builder.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.SecuritySchemeBuilder.type">
            <summary>
            The type.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.SecuritySchemeBuilder.description">
            <summary>
            The description.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.SecuritySchemeBuilder.name">
            <summary>
            The name.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.SecuritySchemeBuilder.securityIn">
            <summary>
            The security in.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.SecuritySchemeBuilder.flow">
            <summary>
            The flow.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.SecuritySchemeBuilder.authorizationUrl">
            <summary>
            The authorization url.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.SecuritySchemeBuilder.tokenUrl">
            <summary>
            The token url.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.SecuritySchemeBuilder.scopes">
            <summary>
            The scopes.
            </summary>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.SecuritySchemeBuilder.Build">
            <summary>
            The build.
            </summary>
            <returns>
            The <see cref="T:Swagger.ObjectModel.SecurityScheme"/>.
            </returns>
            <exception cref="T:Swagger.ObjectModel.Builders.RequiredFieldException">
            </exception>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.ApiKeySecuritySchemeBuilder.Build">
            <summary>
            The build.
            </summary>
            <returns>
            The <see cref="T:Swagger.ObjectModel.SecurityScheme"/>.
            </returns>
            <exception cref="T:Swagger.ObjectModel.Builders.RequiredFieldException">
            </exception>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.ApiKeySecuritySchemeBuilder.Description(System.String)">
            <summary>
            A short description for security scheme.
            </summary>
            <param name="description">
            The description.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.SecuritySchemeBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.ApiKeySecuritySchemeBuilder.Name(System.String)">
            <summary>
            The name.
            </summary>
            <param name="name">
            The name.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.SecuritySchemeBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.ApiKeySecuritySchemeBuilder.IsInQuery">
            <summary>
            Declare that the API key is located in the query
            </summary>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.SecuritySchemeBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.ApiKeySecuritySchemeBuilder.IsInHeader">
            <summary>
            Declare that the API key is located in a header
            </summary>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.SecuritySchemeBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.ApiKeySecuritySchemeBuilder.In(Swagger.ObjectModel.ApiKeyLocations)">
            <summary>
            The in.
            </summary>
            <param name="securityIn">
            The security in.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.SecuritySchemeBuilder"/>.
            </returns>
        </member>
        <member name="T:Swagger.ObjectModel.Builders.BasicSecuritySchemeBuilder">
            <summary>
            The basic security scheme builder.
            </summary>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.BasicSecuritySchemeBuilder.Build">
            <summary>
            The build.
            </summary>
            <returns>
            The <see cref="T:Swagger.ObjectModel.SecurityScheme"/>.
            </returns>
            <exception cref="T:Swagger.ObjectModel.Builders.RequiredFieldException">
            </exception>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.BasicSecuritySchemeBuilder.Description(System.String)">
            <summary>
            A short description for security scheme.
            </summary>
            <param name="description">
            The description.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.SecuritySchemeBuilder"/>.
            </returns>
        </member>
        <member name="T:Swagger.ObjectModel.Builders.BodyParameterBuilder">
            <summary>
            The body parameter builder.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.BodyParameterBuilder.name">
            <summary>
            The name.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.BodyParameterBuilder.description">
            <summary>
            The description.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.BodyParameterBuilder.schema">
            <summary>
            The schema.
            </summary>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.BodyParameterBuilder.Build">
            <summary>
            The build.
            </summary>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Parameter"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.BodyParameterBuilder.Name(System.String)">
            <summary>
            Add the name
            </summary>
            <param name="name">
            The name.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.ParameterBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.BodyParameterBuilder.Description(System.String)">
            <summary>
            Add the description
            </summary>
            <param name="description">
            The description.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.ParameterBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.BodyParameterBuilder.Schema(Swagger.ObjectModel.Schema)">
            <summary>
            Add The schema defining the type used for the body parameter.
            </summary>
            <param name="schema">
            The schema.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.BodyParameterBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.BodyParameterBuilder.Schema``1(System.Action{Swagger.ObjectModel.Builders.SchemaBuilder{``0}})">
            <summary>
            Add The schema defining the type used for the body parameter.
            </summary>
            <param name="schema">
            The schema.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.BodyParameterBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.BodyParameterBuilder.Schema``1">
            <summary>
            Add The schema defining the type used for the body parameter.
            </summary>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.BodyParameterBuilder"/>.
            </returns>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.SwaggerBuilderConfig.resolvedSchemas">
            <summary>
            Contains all resolved ids by the <see cref="M:Swagger.ObjectModel.Builders.SwaggerBuilderConfig.DefaultModelIdConvention(System.Type)"/>.
            </summary>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.SwaggerBuilderConfig.DefaultModelIdConvention(System.Type)">
            <summary>
            Returns a unique model id for the given <paramref name="type"/>. 
            </summary>
            <param name="type"></param>
            <returns></returns>
            <remarks
            >Returns the type's name. If this id was resolved by a 
            different type first, prepend the last part of the type's namespace and check again.
            And so on.
            </remarks>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.SwaggerBuilderConfig.DefaultNicknameConvention(System.String,Swagger.ObjectModel.HttpMethod,Swagger.ObjectModel.Operation)">
            <summary>
            Returns a unique id for the given <paramref name="route"/>
            that can be used by tools reading the output for further and easier
            manipulation.
            </summary>
            <param name="route">The route for which a nickname is returned.</param>
            <returns>a unique id for the given <paramref name="route"/> that can
            be used by tools reading the output for further and easier 
            manipulation.</returns>        
        </member>
        <member name="P:Swagger.ObjectModel.Builders.SwaggerBuilderConfig.ModelIdConvention">
            <summary>
            Gets or sets the function which returns a unique model id for a given <see cref="T:System.Type"/>.
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.Builders.SwaggerBuilderConfig.NicknameConvention">
            <summary>
            Get or sets a function which returns a unique id for the given 
            <see cref="T:Swagger.ObjectModel.PathItem"/> that can be used by tools reading
            the output for further and easier manipulation.
            </summary>
        </member>
        <member name="T:Swagger.ObjectModel.Builders.ContactBuilder">
            <summary>
            The contact builder.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.ContactBuilder.name">
            <summary>
            The name.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.ContactBuilder.emailAddress">
            <summary>
            The email address.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.ContactBuilder.url">
            <summary>
            The url.
            </summary>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.ContactBuilder.Build">
            <summary>
            The build.
            </summary>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Contact"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.ContactBuilder.Name(System.String)">
            <summary>
            The name.
            </summary>
            <param name="name">
            The name.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.ContactBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.ContactBuilder.EmailAddress(System.String)">
            <summary>
            The email address.
            </summary>
            <param name="emailAddress">
            The email address.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.ContactBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.ContactBuilder.Url(System.String)">
            <summary>
            The url.
            </summary>
            <param name="url">
            The url.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.ContactBuilder"/>.
            </returns>
        </member>
        <member name="T:Swagger.ObjectModel.Builders.InfoBuilder">
            <summary>
            The info builder.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.InfoBuilder.contact">
            <summary>
            The contact.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.InfoBuilder.description">
            <summary>
            The description.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.InfoBuilder.license">
            <summary>
            The license.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.InfoBuilder.termsOfService">
            <summary>
            The terms of service.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.InfoBuilder.title">
            <summary>
            The title.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.InfoBuilder.version">
            <summary>
            The version.
            </summary>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.InfoBuilder.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Swagger.ObjectModel.Builders.InfoBuilder"/> class.
            </summary>
            <param name="title">
            The title.
            </param>
            <param name="version">
            The version.
            </param>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.InfoBuilder.Build">
            <summary>
            The build.
            </summary>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Info"/>.
            </returns>
            <exception cref="T:System.InvalidOperationException">
            </exception>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.InfoBuilder.Description(System.String)">
            <summary>
            The description.
            </summary>
            <param name="description">
            The description.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.InfoBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.InfoBuilder.TermsOfService(System.String)">
            <summary>
            The terms of service.
            </summary>
            <param name="termsOfService">
            The terms of service.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.InfoBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.InfoBuilder.Contact(Swagger.ObjectModel.Contact)">
            <summary>
            The contact.
            </summary>
            <param name="contact">
            The contact.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.InfoBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.InfoBuilder.Contact(Swagger.ObjectModel.Builders.ContactBuilder)">
            <summary>
            The contact.
            </summary>
            <param name="contact">
            The contact.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.InfoBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.InfoBuilder.License(Swagger.ObjectModel.License)">
            <summary>
            The license.
            </summary>
            <param name="license">
            The license.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.InfoBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.InfoBuilder.License(Swagger.ObjectModel.Builders.LicenseBuilder)">
            <summary>
            The license.
            </summary>
            <param name="license">
            The license.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.InfoBuilder"/>.
            </returns>
        </member>
        <member name="T:Swagger.ObjectModel.Builders.LicenseBuilder">
            <summary>
            The license builder.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.LicenseBuilder.name">
            <summary>
            The name.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.LicenseBuilder.url">
            <summary>
            The url.
            </summary>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.LicenseBuilder.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Swagger.ObjectModel.Builders.LicenseBuilder"/> class. 
            Initializes a new instance of the <see cref="T:System.Object"/> class.
            </summary>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.LicenseBuilder.Build">
            <summary>
            The build.
            </summary>
            <returns>
            The <see cref="T:Swagger.ObjectModel.License"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.LicenseBuilder.Name(System.String)">
            <summary>
            The name.
            </summary>
            <param name="name">
            The name.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.LicenseBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.LicenseBuilder.Url(System.String)">
            <summary>
            The url.
            </summary>
            <param name="url">
            The url.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.LicenseBuilder"/>.
            </returns>
        </member>
        <member name="T:Swagger.ObjectModel.Builders.Oauth2SecuritySchemeBuilder">
            <summary>
            The oauth 2 security scheme builder.
            </summary>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.Oauth2SecuritySchemeBuilder.Build">
            <summary>
            The build.
            </summary>
            <returns>
            The <see cref="T:Swagger.ObjectModel.SecurityScheme"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.Oauth2SecuritySchemeBuilder.Flow(Swagger.ObjectModel.Oauth2Flows)">
            <summary>
            The flow.
            </summary>
            <param name="flow">
            The flow.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.Oauth2SecuritySchemeBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.Oauth2SecuritySchemeBuilder.AuthorizationUrl(System.String)">
            <summary>
            The authorization url.
            </summary>
            <param name="authorizationUrl">
            The authorization url.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.SecuritySchemeBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.Oauth2SecuritySchemeBuilder.TokenUrl(System.String)">
            <summary>
            The token url.
            </summary>
            <param name="tokenUrl">
            The token url.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.SecuritySchemeBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.Oauth2SecuritySchemeBuilder.Scope(System.String,System.String)">
            <summary>
            Add a scope
            </summary>
            <param name="name">
            The name.
            </param>
            <param name="scope">
            The scope.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.SecuritySchemeBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.Oauth2SecuritySchemeBuilder.Description(System.String)">
            <summary>
            A short description for security scheme.
            </summary>
            <param name="description">
            The description.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.SecuritySchemeBuilder"/>.
            </returns>
        </member>
        <member name="T:Swagger.ObjectModel.Builders.OperationBuilder">
            <summary>
            The operation builder.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.OperationBuilder.tags">
            <summary>
            The tags.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.OperationBuilder.summary">
            <summary>
            The summary.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.OperationBuilder.description">
            <summary>
            The description.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.OperationBuilder.documentation">
            <summary>
            The documentation.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.OperationBuilder.operationId">
            <summary>
            The operation id.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.OperationBuilder.consumes">
            <summary>
            The consumes.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.OperationBuilder.produces">
            <summary>
            The produces.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.OperationBuilder.parameters">
            <summary>
            The parameters.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.OperationBuilder.responses">
            <summary>
            The responses.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.OperationBuilder.schemes">
            <summary>
            The schemes.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.OperationBuilder.deprecated">
            <summary>
            The deprecated.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.OperationBuilder.securityRequirements">
            <summary>
            The security requirements.
            </summary>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.OperationBuilder.Build(Swagger.ObjectModel.Operation)">
            <summary>
            The build.
            </summary>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Operation"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.OperationBuilder.Tag(System.String)">
            <summary>
            Add  list of tags for API documentation control. 
            Tags can be used for logical grouping of operations by resources or any other qualifier.
            </summary>
            <param name="tag">
            The tag.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.OperationBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.OperationBuilder.Tags(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Add  list of tags for API documentation control. 
            Tags can be used for logical grouping of operations by resources or any other qualifier.
            </summary>
            <param name="tags">
            The tags.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.OperationBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.OperationBuilder.Summary(System.String)">
            <summary>
            A short summary of what the operation does. For maximum readability in the swagger-ui, this field SHOULD be less than 120 characters.
            </summary>
            <param name="summary">
            The summary.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.OperationBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.OperationBuilder.Description(System.String)">
            <summary>
            A verbose explanation of the operation behavior. GitHub Flavored Markdown syntax can be used for rich text representation.
            </summary>
            <param name="description">
            The description.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.OperationBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.OperationBuilder.ExternalDocumentation(Swagger.ObjectModel.ExternalDocumentation)">
            <summary>
            Additional external documentation
            </summary>
            <param name="documentation">
            The documentation.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.OperationBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.OperationBuilder.ExternalDocumentation(Swagger.ObjectModel.ExternalDocumentationBuilder)">
            <summary>
            Additional external documentation 
            </summary>
            <param name="documentation">
            The documentation.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.OperationBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.OperationBuilder.OperationId(System.String)">
            <summary>
            A friendly name for the operation. 
            The id MUST be unique among all operations described in the API. 
            Tools and libraries MAY use the operation id to uniquely identify an operation.
            </summary>
            <param name="operationId">
            The operation id.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.OperationBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.OperationBuilder.ConsumeMimeType(System.String)">
            <summary>
            Add a MIME type the operation can consume
            </summary>
            <param name="consume">
            The consume.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.OperationBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.OperationBuilder.ConsumeMimeTypes(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Add a list of MIME types the operation can consume
            </summary>
            <param name="consumes">
            The consumes.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.OperationBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.OperationBuilder.ProduceMimeType(System.String)">
            <summary>
            Add a MIME type the operation can produce
            </summary>
            <param name="produce">
            The produce.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.OperationBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.OperationBuilder.ProduceMimeTypes(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Add a list of MIME types the operation can produce
            </summary>
            <param name="produces">
            The produces.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.OperationBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.OperationBuilder.Parameter(Swagger.ObjectModel.Parameter)">
            <summary>
            Add a parameter for this operation
            </summary>
            <param name="parameter">
            The parameter.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.OperationBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.OperationBuilder.Parameter(System.Action{Swagger.ObjectModel.Builders.ParameterBuilder})">
            <summary>
            Add a parameter for this operation
            </summary>
            <param name="parameter">
            The parameter.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.OperationBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.OperationBuilder.BodyParameter(System.Action{Swagger.ObjectModel.Builders.BodyParameterBuilder})">
            <summary>
            Add a body parameter for this operation
            </summary>
            <param name="parameter">
            The parameter.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.OperationBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.OperationBuilder.Parameters(System.Collections.Generic.IEnumerable{Swagger.ObjectModel.Parameter})">
            <summary>
            Add parameters that are valid for this operation
            </summary>
            <param name="parameters">
            The parameters.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.OperationBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.OperationBuilder.Response(System.Action{Swagger.ObjectModel.Builders.ResponseBuilder})">
            <summary>
            Add the default response
            </summary>
            <param name="response">
            The response.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.OperationBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.OperationBuilder.Response(System.Net.HttpStatusCode,System.Action{Swagger.ObjectModel.Builders.ResponseBuilder})">
            <summary>
            Add the expected response object for an HTTP Status Code
            </summary>
            <param name="httpStatusCode">
            The http status code.
            </param>
            <param name="response">
            The response.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.OperationBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.OperationBuilder.Response(System.Int32,System.Action{Swagger.ObjectModel.Builders.ResponseBuilder})">
            <summary>
            Add the expected response object for an HTTP Status Code
            </summary>
            <param name="httpStatusCode">
            The http status code.
            </param>
            <param name="response">
            The response.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.OperationBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.OperationBuilder.Response(System.String,System.Action{Swagger.ObjectModel.Builders.ResponseBuilder})">
            <summary>
            Add the expected response object for an HTTP Status Code
            </summary>
            <param name="httpStatusCode">
            The http status code.
            </param>
            <param name="response">
            The response.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.OperationBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.OperationBuilder.Scheme(Swagger.ObjectModel.Schemes)">
            <summary>
            Add a transfer protocol
            </summary>
            <param name="scheme">
            The scheme.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.OperationBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.OperationBuilder.IsDeprecated">
            <summary>
            Declares this operation to be deprecated
            </summary>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.OperationBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.OperationBuilder.SecurityRequirement(System.Collections.Generic.KeyValuePair{Swagger.ObjectModel.SecuritySchemes,System.Collections.Generic.IEnumerable{System.String}})">
            <summary>
            Add a security requirement
            </summary>
            <param name="security">
            The security.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.OperationBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.OperationBuilder.SecurityRequirement(Swagger.ObjectModel.Builders.SecurityRequirementBuilder)">
            <summary>
            Add a security requirement from the builder
            </summary>
            <param name="security">
            The security.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.OperationBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.OperationBuilder.SecurityRequirement(Swagger.ObjectModel.SecuritySchemes)">
            <summary>
            Shortcut to add a security requirement that is not <see cref="F:Swagger.ObjectModel.SecuritySchemes.Oauth2"/>
            </summary>
            <param name="securityScheme">
            The security scheme.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.OperationBuilder"/>.
            </returns>
        </member>
        <member name="T:Swagger.ObjectModel.Builders.ParameterBuilder">
            <summary>
            The parameter builder.
            </summary>
        </member>
        <member name="T:Swagger.ObjectModel.Builders.DataTypeBuilder`2">
            <summary>
            The data type builder.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.DataTypeBuilder`2.maximum">
            <summary>
            The maximum.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.DataTypeBuilder`2.minimum">
            <summary>
            The minimum.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.DataTypeBuilder`2.type">
            <summary>
            The type.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.DataTypeBuilder`2.collectionFormat">
            <summary>
            The collection format.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.DataTypeBuilder`2.defaultValue">
            <summary>
            The default value.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.DataTypeBuilder`2.enum">
            <summary>
            The enum.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.DataTypeBuilder`2.exclusiveMax">
            <summary>
            The exclusive max.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.DataTypeBuilder`2.exclusiveMin">
            <summary>
            The exclusive min.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.DataTypeBuilder`2.format">
            <summary>
            The format.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.DataTypeBuilder`2.items">
            <summary>
            The items.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.DataTypeBuilder`2.maxItems">
            <summary>
            The max items.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.DataTypeBuilder`2.maxLength">
            <summary>
            The max length.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.DataTypeBuilder`2.minItems">
            <summary>
            The min items.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.DataTypeBuilder`2.minLength">
            <summary>
            The min length.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.DataTypeBuilder`2.multipleOf">
            <summary>
            The multiple of.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.DataTypeBuilder`2.pattern">
            <summary>
            The pattern.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.DataTypeBuilder`2.reference">
            <summary>
            The reference.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.DataTypeBuilder`2.uniqueItems">
            <summary>
            The unique items.
            </summary>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.DataTypeBuilder`2.Build">
            <summary>
            The build.
            </summary>
            <returns>
            An instance of type T
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.DataTypeBuilder`2.BuildBase">
            <summary>
            The build.
            </summary>
            <returns>
            The <see cref="T:Swagger.ObjectModel.DataType"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.DataTypeBuilder`2.Maximum(System.Int64)">
            <summary>
            The maximum.
            </summary>
            <param name="maximum">
            The maximum.
            </param>
            <returns>
            The builder
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.DataTypeBuilder`2.Minimum(System.Int64)">
            <summary>
            The minimum.
            </summary>
            <param name="minimum">
            The minimum.
            </param>
            <returns>
            The builder
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.DataTypeBuilder`2.Type(System.String)">
            <summary>
            The type.
            </summary>
            <param name="type">
            The type.
            </param>
            <returns>
            The builder
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.DataTypeBuilder`2.CollectionFormat(Swagger.ObjectModel.CollectionFormats)">
            <summary>
            The collection format.
            </summary>
            <param name="collectionFormat">
            The collection format.
            </param>
            <returns>
            The builder
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.DataTypeBuilder`2.Default(System.Object)">
            <summary>
            The default.
            </summary>
            <param name="defaultValue">
            The default value.
            </param>
            <returns>
            The builder
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.DataTypeBuilder`2.Enum(System.String)">
            <summary>
            The enum.
            </summary>
            <param name="enum">
            The enum.
            </param>
            <returns>
            The builder
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.DataTypeBuilder`2.Enums(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            The enums.
            </summary>
            <param name="enums">
            The enums.
            </param>
            <returns>
            The builder
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.DataTypeBuilder`2.IsExclusiveMaximum">
            <summary>
            The is exclusive maximum.
            </summary>
            <returns>
            The builder
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.DataTypeBuilder`2.IsExclusiveMinimum">
            <summary>
            The is exclusive minimum.
            </summary>
            <returns>
            The builder
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.DataTypeBuilder`2.Format(System.String)">
            <summary>
            The format.
            </summary>
            <param name="format">
            The format.
            </param>
            <returns>
            The builder
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.DataTypeBuilder`2.Items(Swagger.ObjectModel.Item)">
            <summary>
            The items.
            </summary>
            <param name="items">
            The items.
            </param>
            <returns>
            The builder
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.DataTypeBuilder`2.MaxItems(System.Int32)">
            <summary>
            The max items.
            </summary>
            <param name="maxItems">
            The max items.
            </param>
            <returns>
            The builder
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.DataTypeBuilder`2.MaxLength(System.Int64)">
            <summary>
            The max length.
            </summary>
            <param name="maxLength">
            The max length.
            </param>
            <returns>
            The builder
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.DataTypeBuilder`2.MinItems(System.Int32)">
            <summary>
            The min items.
            </summary>
            <param name="minItems">
            The min items.
            </param>
            <returns>
            The builder
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.DataTypeBuilder`2.MinLength(System.Int64)">
            <summary>
            The min length.
            </summary>
            <param name="minLength">
            The min length.
            </param>
            <returns>
            The builder
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.DataTypeBuilder`2.MultipleOf(System.Int32)">
            <summary>
            The multiple of.
            </summary>
            <param name="multipleOf">
            The multiple of.
            </param>
            <returns>
            The builder
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.DataTypeBuilder`2.Pattern(System.String)">
            <summary>
            The pattern.
            </summary>
            <param name="pattern">
            The pattern.
            </param>
            <returns>
            The builder
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.DataTypeBuilder`2.IsUniqueItems">
            <summary>
            The is unique items.
            </summary>
            <returns>
            The builder
            </returns>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.ParameterBuilder.name">
            <summary>
            The name.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.ParameterBuilder.parameterIn">
            <summary>
            The parameter in.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.ParameterBuilder.description">
            <summary>
            The description.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.ParameterBuilder.required">
            <summary>
            The required.
            </summary>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.ParameterBuilder.Build">
            <summary>
            The build.
            </summary>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Parameter"/>.
            </returns>
            <exception cref="T:Swagger.ObjectModel.Builders.RequiredFieldException">
            </exception>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.ParameterBuilder.Name(System.String)">
            <summary>
            The name.
            </summary>
            <param name="name">
            The name.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.ParameterBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.ParameterBuilder.In(Swagger.ObjectModel.ParameterIn)">
            <summary>
            Add the location of the parameter. Use <see cref="T:Swagger.ObjectModel.Builders.BodyParameterBuilder"/> for body parameters
            </summary>
            <param name="parameterIn">
            The parameter in.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.ParameterBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.ParameterBuilder.Description(System.String)">
            <summary>
            The description.
            </summary>
            <param name="description">
            The description.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.ParameterBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.ParameterBuilder.IsRequired">
            <summary>
            Declares that the parameter is required
            </summary>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.ParameterBuilder"/>.
            </returns>
        </member>
        <member name="T:Swagger.ObjectModel.Builders.PathItemBuilder">
            <summary>
            The path item builder.
            </summary>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.PathItemBuilder.Build">
            <summary>
            The build.
            </summary>
            <returns>
            The <see cref="T:Swagger.ObjectModel.PathItem"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.PathItemBuilder.Operation(System.Action{Swagger.ObjectModel.Builders.OperationBuilder})">
            <summary>
            Defines the operation for the path and method;
            </summary>
            <param name="operation">
            The operation.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.PathItemBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.PathItemBuilder.Parameter(Swagger.ObjectModel.Parameter)">
            <summary>
            Add a parameter for this operation
            </summary>
            <param name="parameter">
            The parameter.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.PathItemBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.PathItemBuilder.Parameter(Swagger.ObjectModel.Builders.ParameterBuilder)">
            <summary>
            Add a parameter for this operation
            </summary>
            <param name="parameter">
            The parameter.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.PathItemBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.PathItemBuilder.Parameter(Swagger.ObjectModel.Builders.BodyParameterBuilder)">
            <summary>
            Add a body parameter for this operation
            </summary>
            <param name="parameter">
            The parameter.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.PathItemBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.PathItemBuilder.Parameters(System.Collections.Generic.IEnumerable{Swagger.ObjectModel.Parameter})">
            <summary>
            Add parameters that are valid for this operation
            </summary>
            <param name="parameters">
            The parameters.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.PathItemBuilder"/>.
            </returns>
        </member>
        <member name="T:Swagger.ObjectModel.Builders.RequiredFieldException">
            <summary>
            The required field exception.
            </summary>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.RequiredFieldException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Swagger.ObjectModel.Builders.RequiredFieldException"/> class. 
            Initializes a new instance of the <see cref="T:System.InvalidOperationException"/> class.
            </summary>
        </member>
        <member name="T:Swagger.ObjectModel.Builders.SecurityRequirementBuilder">
            <summary>
            The security requirement builder.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.SecurityRequirementBuilder.scopeNames">
            <summary>
            The scope names.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.SecurityRequirementBuilder.scheme">
            <summary>
            The scheme.
            </summary>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.SecurityRequirementBuilder.Build">
            <summary>
            The build.
            </summary>
            <returns>
            The <see cref="T:System.Collections.Generic.KeyValuePair`2"/>.
            </returns>
            <exception cref="T:Swagger.ObjectModel.Builders.RequiredFieldException">
            </exception>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.SecurityRequirementBuilder.SecurityScheme(Swagger.ObjectModel.SecuritySchemes)">
            <summary>
            The security scheme.
            </summary>
            <param name="scheme">
            The scheme.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.SecurityRequirementBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.SecurityRequirementBuilder.SecurityScheme(System.String)">
            <summary>
            The security scheme.
            </summary>
            <param name="scopeName">
            The scope name.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.SecurityRequirementBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.SecurityRequirementBuilder.SecurityScheme(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            The security scheme.
            </summary>
            <param name="scopeNames">
            The scope names.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.SecurityRequirementBuilder"/>.
            </returns>
        </member>
        <member name="T:Swagger.ObjectModel.Builders.SwaggerRootBuilder">
            <summary>
            The swagger root builder.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.SwaggerRootBuilder.paths">
            <summary>
            The paths.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.SwaggerRootBuilder.info">
            <summary>
            The info.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.SwaggerRootBuilder.tags">
            <summary>
            The tags.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.SwaggerRootBuilder.documentation">
            <summary>
            The documentation.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.SwaggerRootBuilder.consumes">
            <summary>
            The consumes.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.SwaggerRootBuilder.produces">
            <summary>
            The produces.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.SwaggerRootBuilder.parameters">
            <summary>
            The parameters.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.SwaggerRootBuilder.responses">
            <summary>
            The responses.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.SwaggerRootBuilder.schemes">
            <summary>
            The schemes.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.SwaggerRootBuilder.securityRequirements">
            <summary>
            The security requirements.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.SwaggerRootBuilder.host">
            <summary>
            The host.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.SwaggerRootBuilder.basePath">
            <summary>
            The base path.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.SwaggerRootBuilder.securityDefinitions">
            <summary>
            The security definitions.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.SwaggerRootBuilder.definitions">
            <summary>
            The definitions.
            </summary>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.SwaggerRootBuilder.#ctor(Swagger.ObjectModel.Info)">
            <summary>
            Initializes a new instance of the <see cref="T:Swagger.ObjectModel.Builders.SwaggerRootBuilder"/> class. 
            </summary>
            <param name="info">
            The info.
            </param>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.SwaggerRootBuilder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Swagger.ObjectModel.Builders.SwaggerRootBuilder"/> class. 
            </summary>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.SwaggerRootBuilder.Build">
            <summary>
            The build.
            </summary>
            <returns>
            The <see cref="T:Swagger.ObjectModel.SwaggerRoot"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.SwaggerRootBuilder.Info(Swagger.ObjectModel.Info)">
            <summary>
            The info.
            </summary>
            <param name="info">
            The info.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.SwaggerRootBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.SwaggerRootBuilder.Info(Swagger.ObjectModel.Builders.InfoBuilder)">
            <summary>
            The info.
            </summary>
            <param name="info">
            The info.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.SwaggerRootBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.SwaggerRootBuilder.Path(System.String,Swagger.ObjectModel.PathItem)">
            <summary>
            Add an available path (endpoint) for the API
            </summary>
            <param name="endpointName">
            A relative path to an individual endpoint. 
            The path is appended to the basePath in order to construct the full URL. Path templating is allowed.
            </param>
            <param name="pathItem">
            The path item.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.SwaggerRootBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.SwaggerRootBuilder.Path(System.String,Swagger.ObjectModel.Builders.PathItemBuilder)">
            <summary>
            Add an available path (endpoint) for the API
            </summary>
            <param name="endpointName">
            A relative path to an individual endpoint. 
            The path is appended to the basePath in order to construct the full URL. Path templating is allowed.
            </param>
            <param name="pathItem">
            The path item.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.SwaggerRootBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.SwaggerRootBuilder.Path(System.String)">
            <summary>
            Add an available path (endpoint) for the API with no documentation. 
            The path itself is still exposed to the documentation viewer but they will not know which operations and parameters are available.
            </summary>
            <param name="endpointName">
            A relative path to an individual endpoint. 
            The path is appended to the basePath in order to construct the full URL. Path templating is allowed.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.SwaggerRootBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.SwaggerRootBuilder.Host(System.String)">
            <summary>
            The host (name or ip) serving the API. This MUST be the host only and does not include the scheme nor sub-paths. 
            It MAY include a port. 
            If the host is not included, the host serving the documentation is to be used (including the port). 
            The host does not support path templating.
            </summary>
            <param name="host">
            The host.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.SwaggerRootBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.SwaggerRootBuilder.BasePath(System.String)">
            <summary>
            The base path on which the API is served, which is relative to the host. If it is not included, the API is served directly under the host. 
            The value MUST start with a leading slash (/). 
            The basePath does not support path templating.
            </summary>
            <param name="basePath">
            The base path
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.SwaggerRootBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.SwaggerRootBuilder.Scheme(Swagger.ObjectModel.Schemes)">
            <summary>
            Add a transfer protocol
            </summary>
            <param name="scheme">
            The scheme.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.SwaggerRootBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.SwaggerRootBuilder.ConsumeMimeType(System.String)">
            <summary>
            Add a MIME type the API can consume
            </summary>
            <param name="consume">
            The consume.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.SwaggerRootBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.SwaggerRootBuilder.ConsumeMimeTypes(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Add a list of MIME types the API can consume
            </summary>
            <param name="consumes">
            The consumes.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.SwaggerRootBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.SwaggerRootBuilder.ProduceMimeType(System.String)">
            <summary>
            Add a MIME type the API can produce
            </summary>
            <param name="produce">
            The produce.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.SwaggerRootBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.SwaggerRootBuilder.ProduceMimeTypes(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Add a list of MIME types the API can produce
            </summary>
            <param name="produces">
            The produces.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.SwaggerRootBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.SwaggerRootBuilder.Parameter(System.String,Swagger.ObjectModel.Parameter)">
            <summary>
            Add a parameter that can be reused across operations
            </summary>
            <param name="name"> Map a name for the parameter </param>
            <param name="parameter">
            The parameter.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.SwaggerRootBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.SwaggerRootBuilder.Parameter(Swagger.ObjectModel.Parameter)">
            <summary>
            Add a parameter that can be reused across operations.
            Uses the parameter name as the name.
            </summary>
            <param name="parameter">
            The parameter.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.SwaggerRootBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.SwaggerRootBuilder.Parameter(Swagger.ObjectModel.Builders.ParameterBuilder)">
            <summary>
            Add a parameter for this operation
            </summary>
            <param name="parameter">
            The parameter.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.SwaggerRootBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.SwaggerRootBuilder.Parameter(Swagger.ObjectModel.Builders.BodyParameterBuilder)">
            <summary>
            Add a body parameter for this operation
            </summary>
            <param name="parameter">
            The parameter.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.SwaggerRootBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.SwaggerRootBuilder.Response(System.String,Swagger.ObjectModel.Response)">
            <summary>
            Add a response to be reused across operations. Response definitions can be referenced to the ones defined here.
            </summary>
            <param name="name">
            The name
            </param>
            <param name="response">
            The response.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.SwaggerRootBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.SwaggerRootBuilder.Response(System.String,Swagger.ObjectModel.Builders.ResponseBuilder)">
            <summary>
            Add a response to be reused across operations. Response definitions can be referenced to the ones defined here.
            </summary>
            <param name="name">
            The name
            </param>
            <param name="response">
            The response.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.SwaggerRootBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.SwaggerRootBuilder.SecurityDefinition(System.String,Swagger.ObjectModel.SecurityScheme)">
            <summary>
            Add a Security scheme definitions that can be used across the specification.
            </summary>
            <param name="name">
            The name.
            </param>
            <param name="scheme">
            The scheme.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.SwaggerRootBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.SwaggerRootBuilder.SecurityDefinition(System.String,Swagger.ObjectModel.Builders.SecuritySchemeBuilder)">
            <summary>
            Add a Security scheme definitions that can be used across the specification.
            </summary>
            <param name="name">
            The name.
            </param>
            <param name="scheme">
            The scheme.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.SwaggerRootBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.SwaggerRootBuilder.SecurityRequirement(System.Collections.Generic.KeyValuePair{Swagger.ObjectModel.SecuritySchemes,System.Collections.Generic.IEnumerable{System.String}})">
            <summary>
            Add a security requirement
            </summary>
            <param name="security">
            The security.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.SwaggerRootBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.SwaggerRootBuilder.SecurityRequirement(Swagger.ObjectModel.Builders.SecurityRequirementBuilder)">
            <summary>
            Add a security requirement from the builder
            </summary>
            <param name="security">
            The security.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.SwaggerRootBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.SwaggerRootBuilder.SecurityRequirement(Swagger.ObjectModel.SecuritySchemes)">
            <summary>
            Shortcut to add a security requirement that is not <see cref="F:Swagger.ObjectModel.SecuritySchemes.Oauth2"/>
            </summary>
            <param name="securityScheme">
            The security scheme.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.SwaggerRootBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.SwaggerRootBuilder.ExternalDocumentation(Swagger.ObjectModel.ExternalDocumentation)">
            <summary>
            Additional external documentation
            </summary>
            <param name="documentation">
            The documentation.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.SwaggerRootBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.SwaggerRootBuilder.ExternalDocumentation(Swagger.ObjectModel.ExternalDocumentationBuilder)">
            <summary>
            Additional external documentation 
            </summary>
            <param name="documentation">
            The documentation.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.SwaggerRootBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.SwaggerRootBuilder.Tag(Swagger.ObjectModel.Tag)">
            <summary>
            The tag.
            </summary>
            <param name="tag">
            The tag.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.SwaggerRootBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.SwaggerRootBuilder.Tag(Swagger.ObjectModel.Builders.TagBuilder)">
            <summary>
            The tag.
            </summary>
            <param name="tag">
            The tag.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.SwaggerRootBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.SwaggerRootBuilder.Definition(System.String,Swagger.ObjectModel.Schema)">
            <summary>
            The definition.
            </summary>
            <param name="name">
            The name.
            </param>
            <param name="definition">
            The definition.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.SwaggerRootBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.SwaggerRootBuilder.Definition``1(System.String,Swagger.ObjectModel.Builders.SchemaBuilder{``0})">
            <summary>
            The definition.
            </summary>
            <param name="name">
            The name.
            </param>
            <param name="definition">
            The definition.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.SwaggerRootBuilder"/>.
            </returns>
        </member>
        <member name="T:Swagger.ObjectModel.Builders.TagBuilder">
            <summary>
            The tag builder.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.TagBuilder.description">
            <summary>
            The description.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.TagBuilder.documentation">
            <summary>
            The documentation.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.TagBuilder.name">
            <summary>
            The name.
            </summary>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.TagBuilder.Build">
            <summary>
            The build.
            </summary>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Tag"/>.
            </returns>
            <exception cref="T:Swagger.ObjectModel.Builders.RequiredFieldException">
            </exception>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.TagBuilder.Name(System.String)">
            <summary>
            The name.
            </summary>
            <param name="name">
            The name.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.TagBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.TagBuilder.Description(System.String)">
            <summary>
            The description.
            </summary>
            <param name="description">
            The description.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.TagBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.TagBuilder.ExternalDocumentation(Swagger.ObjectModel.ExternalDocumentation)">
            <summary>
            The external documentation.
            </summary>
            <param name="externalDocumentation">
            The external documentation.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.TagBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.TagBuilder.ExternalDocumentation(Swagger.ObjectModel.ExternalDocumentationBuilder)">
            <summary>
            The external documentation.
            </summary>
            <param name="externalDocumentation">
            The external documentation.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.TagBuilder"/>.
            </returns>
        </member>
        <member name="T:Swagger.ObjectModel.CollectionFormats">
            <summary>
            The collection formats.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.CollectionFormats.Csv">
            <summary>
            Comma separated values foo,bar
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.CollectionFormats.Ssv">
            <summary>
            Space separated values foo bar
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.CollectionFormats.Tsv">
            <summary>
            Tab separated values foo\tbar
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.CollectionFormats.Pipes">
            <summary>
            Pipe separated values foo|bar
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:Swagger.ObjectModel.CollectionFormats.Multi" -->
        <member name="T:Swagger.ObjectModel.BodyParameter">
            <summary>
            The body parameter.
            </summary>
        </member>
        <member name="T:Swagger.ObjectModel.Parameter">
            <summary>
            The Parameter Object describes a single parameter to be sent in an operation and maps to the parameters field in the Operation Object.
            </summary>
            <example>
            <code>
            {
              name: "body",
              description: "Pet object that needs to be updated in the store",
              required: true,
              type: "Pet",
              paramType: "body"
            }
            </code>
            </example>
        </member>
        <member name="T:Swagger.ObjectModel.DataType">
            <summary>
            Base class for Swagger data types.
            </summary>
        </member>
        <member name="T:Swagger.ObjectModel.SwaggerModel">
            <summary>
            The base class for all Swagger models with logic to serialize it according to the Swagger schema.
            </summary>
        </member>
        <member name="M:Swagger.ObjectModel.SwaggerModel.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>
            A string that represents the current object.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.SwaggerModel.ToJson">
            <summary>
            Returns a valid JSON representation of
            the model, according to the Swagger schema.
            </summary>
            <returns>A valid JSON representation of the model.</returns>
        </member>
        <member name="P:Swagger.ObjectModel.SwaggerModel.Ref">
            <summary>
            Gets or sets the references to a globally defined object
            </summary>
            <remarks>
            The value MUST be a model's id.
            </remarks>
        </member>
        <member name="P:Swagger.ObjectModel.DataType.Type">
            <summary>
            The return type of the operation.
            </summary>
            <remarks>
            The value MUST be one of the Primitves, array or a model's id.
            </remarks>
        </member>
        <member name="P:Swagger.ObjectModel.DataType.Format">
            <summary>
            Fine-tuned primitive type definition.
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.DataType.Items">
            <summary>
            The type definition of the values in the container.
            </summary>
            <remarks>
            A container MAY NOT be nested in another container.
            </remarks>
        </member>
        <member name="P:Swagger.ObjectModel.DataType.CollectionFormat">
            <summary>
            Determines the format of the array if type array is used. Default value is csv
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.DataType.Default">
            <summary>
            Sets a default value to the parameter. The type of the value depends on the defined type. See http://json-schema.org/latest/json-schema-validation.html#anchor101.
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.DataType.Maximum">
            <summary>
            The maximum valid value for the type, inclusive. If this field is used in conjunction with the defaultValue field,
            then the default value MUST be lower than or equal to this value.
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.DataType.ExclusiveMaximum">
            <summary>
            If null or false, then the instance is valid if it is less than, or equal to, the value of <see cref="P:Swagger.ObjectModel.DataType.Maximum"/>
            if true, the instance is valid if it is strictly less than the value of <see cref="P:Swagger.ObjectModel.DataType.Maximum"/>.
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.DataType.Minimum">
            <summary>
            The minimum valid value for the type, inclusive.
            </summary>
            <remarks>
            If this field is used in conjunction with the defaultValue field,
            then the default value MUST be higher than or equal to this value.
            </remarks>
        </member>
        <member name="P:Swagger.ObjectModel.DataType.ExclusiveMinimum">
            <summary>
            If null or false, then the instance is valid if it is greater than, or equal to, the value of <see cref="P:Swagger.ObjectModel.DataType.Minimum"/>
            if true, the instance is valid if it is strictly greater than the value of <see cref="P:Swagger.ObjectModel.DataType.Minimum"/>.
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.DataType.MaxLength">
            <summary>
            Max length of string value
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.DataType.MinLength">
            <summary>
            Min length of string value
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.DataType.Pattern">
            <summary>
            Regular expression
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.DataType.MaxItems">
            <summary>
            Max array length
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.DataType.MinItems">
            <summary>
            Min array length
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.DataType.UniqueItems">
            <summary>
            A flag to note whether the container allows duplicate values or not.
            If the value is set to <c>true</c>, then the array acts as a set.
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.DataType.Enum">
            <summary>
            A fixed list of possible values.
            </summary>
            <remarks>
            If this field is used in conjunction with the defaultValue field,
            then the default value MUST be one of the values defined in the enum.
            </remarks>
        </member>
        <member name="P:Swagger.ObjectModel.DataType.MultipleOf">
            <summary>
            A numeric instance is valid against "multipleOf" if the result of the division of the instance by this keyword's value is an integer.
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.Parameter.Name">
            <summary>
            The unique name for the parameter.
            Each name MUST be unique, even if they are associated with different <see cref="P:Swagger.ObjectModel.Parameter.In"/> values.
            </summary>
            <remarks>
            Parameter names are case sensitive.
            If <see cref="P:Swagger.ObjectModel.Parameter.In"/> is "path", the name field MUST correspond to the associated path segment from the path field in the Paths Object. See Path Templating for further information.
            For all other cases, the name corresponds to the parameter name used based on the in property.
            </remarks>
        </member>
        <member name="P:Swagger.ObjectModel.Parameter.In">
            <summary>
            The type of the parameter (that is, the location of the parameter in the request).
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.Parameter.Description">
            <summary>
            A brief description of this parameter.
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.Parameter.Required">
            <summary>
            A flag to note whether this parameter is required.
            If this field is not included, it is equivalent to adding this field with the value false.
            </summary>
            <remarks>
            The field MUST be included if <see cref="P:Swagger.ObjectModel.Parameter.In"/> is <see cref="F:Swagger.ObjectModel.ParameterIn.Path"/> and MUST have the value true.
            </remarks>
        </member>
        <member name="P:Swagger.ObjectModel.BodyParameter.In">
            <summary>
            The type of the parameter (that is, the location of the parameter in the request).
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.BodyParameter.Schema">
            <summary>
            The schema defining the type used for the body parameter.
            </summary>
        </member>
        <member name="T:Swagger.ObjectModel.ExternalDocumentation">
            <summary>
            The external documentation.
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.ExternalDocumentation.Description">
            <summary>
            A short description of the target documentation. GFM syntax can be used for rich text representation.
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.ExternalDocumentation.Url">
            <summary>
            The URL for the target documentation. Value MUST be in the format of a URL.
            </summary>
        </member>
        <member name="T:Swagger.ObjectModel.ExternalDocumentationBuilder">
            <summary>
            The external documentation builder.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.ExternalDocumentationBuilder.description">
            <summary>
            The description.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.ExternalDocumentationBuilder.url">
            <summary>
            The url.
            </summary>
        </member>
        <member name="M:Swagger.ObjectModel.ExternalDocumentationBuilder.Build">
            <summary>
            The build.
            </summary>
            <returns>
            The <see cref="T:Swagger.ObjectModel.ExternalDocumentation"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.ExternalDocumentationBuilder.Description(System.String)">
            <summary>
            The description.
            </summary>
            <param name="description">
            The description.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.ExternalDocumentationBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.ExternalDocumentationBuilder.Url(System.String)">
            <summary>
            The url.
            </summary>
            <param name="url">
            The url.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.ExternalDocumentationBuilder"/>.
            </returns>
        </member>
        <member name="T:Swagger.ObjectModel.Header">
            <summary>
            The header.
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.Header.Description">
            <summary>
            A short description of the header.
            </summary>
        </member>
        <member name="T:Swagger.ObjectModel.Builders.HeaderBuilder">
            <summary>
            The header builder.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.HeaderBuilder.description">
            <summary>
            The description.
            </summary>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.HeaderBuilder.Build">
            <summary>
            The build.
            </summary>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Header"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.HeaderBuilder.Description(System.String)">
            <summary>
            The description.
            </summary>
            <param name="description">
            The description.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.HeaderBuilder"/>.
            </returns>
        </member>
        <member name="T:Swagger.ObjectModel.HttpMethod">
            <summary>
            An enum representing standard HTTP methods.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.HttpMethod.Get">
            <summary>
            The GET HTTP method.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.HttpMethod.Post">
            <summary>
            The POST HTTP method.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.HttpMethod.Put">
            <summary>
            The PUT HTTP method.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.HttpMethod.Patch">
            <summary>
            The PATCH HTTP method.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.HttpMethod.Delete">
            <summary>
            The DELETE HTTP method.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.HttpMethod.Options">
            <summary>
            The OPTIONS HTTP method.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.HttpMethod.Head">
            <summary>
            The HEAD HTTP method.
            </summary>
        </member>
        <member name="T:Swagger.ObjectModel.Model">
            <summary>
            A Model Object holds the definition of a new model for this API Declaration.
            </summary>
            <remarks>
            Models in Swagger allow for inheritance.
            The inheritance is controlled by two fields - <see cref="P:Swagger.ObjectModel.Model.SubTypes"/> to give the name of
            the models extending this definition, and <see cref="P:Swagger.ObjectModel.Model.Discriminator"/> to support polymorphism.
            </remarks>
            <example>
            <code>
            {
              "id": "Order",
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int64"
                },
                "petId": {
                  "type": "integer",
                  "format": "int64"
                },
                "quantity": {
                  "type": "integer",
                  "format": "int32"
                },
                "status": {
                  "type": "string",
                  "description": "OrderStatus",
                  "enum": [
                    "placed",
                    "approved",
                    "delivered"
                  ]
                },
                "shipDate": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
            </code>
            </example>
        </member>
        <member name="P:Swagger.ObjectModel.Model.Id">
            <summary>
            A unique identifier for the model.
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.Model.Description">
            <summary>
            A brief description of this model.
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.Model.Required">
            <summary>
            A definition of which properties MUST exist when a model instance is produced.
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.Model.Properties">
            <summary>
            A list of properties (fields) that are part of the model.
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.Model.SubTypes">
            <summary>
            List of the model ids that inherit from this model.
            Sub models inherit all the properties of the parent model.
            Since inheritance is transitive, if the parent of a model inherits
            from another model, its sub-model will include all properties.
            As such, if you have Foo->Bar->Baz, then Baz will inherit the properties of Bar and Foo.
            </summary>
            <remarks>
            There MUST NOT be a cyclic definition of inheritance.
            There also MUST NOT be a case of multiple inheritance.
            A sub-model definition MUST NOT override the properties of any of its ancestors.
            All sub-models MUST be defined in the same API Declaration.
            </remarks>
        </member>
        <member name="P:Swagger.ObjectModel.Model.Discriminator">
            <summary>
            This field allows for polymorphism within the described inherited models.
            </summary>
            <remarks>
            MUST be included only if <see cref="P:Swagger.ObjectModel.Model.SubTypes"/> is included.
            This field MAY be included at any base model but MUST NOT be included in a sub-model.
            The value of this field MUST be a name of one of the properties in this model, and that field MUST be in the required list.
            When used, the value of the discriminator property MUST be the name of parent or any of its sub-models (to any depth of inheritance).
            </remarks>
        </member>
        <member name="T:Swagger.ObjectModel.ModelProperty">
            <summary>
            A Property Object holds the definition of a new property for a model.
            </summary>
            <example>
            <code>
            "id": {
                "type": "integer",
                "format": "int64",
                "description": "unique identifier for the pet",
                "minimum": "0.0",
                "maximum": "100.0"
            }
            </code>
            </example>
        </member>
        <member name="P:Swagger.ObjectModel.ModelProperty.Description">
            <summary>
            A brief description of this property.
            </summary>
        </member>
        <member name="T:Swagger.ObjectModel.Oauth2Flows">
            <summary>
            The oauth 2 flows.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Oauth2Flows.Implicit">
            <summary>
            The implicit.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Oauth2Flows.Password">
            <summary>
            The password.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Oauth2Flows.Application">
            <summary>
            The application.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Oauth2Flows.AccessCode">
            <summary>
            The access code.
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.Operation.Tags">
            <summary>
            A list of tags for API documentation control. Tags can be used for logical grouping of operations by resources or any other qualifier.
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.Operation.Summary">
            <summary>
            A short summary of what the operation does. For maximum readability in the swagger-ui, this field SHOULD be less than 120 characters.
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.Operation.Description">
            <summary>
            A verbose explanation of the operation behavior. GFM syntax can be used for rich text representation.
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.Operation.ExternalDocumentation">
            <summary>
            Additional external documentation for this operation.
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.Operation.OperationId">
            <summary>
            A friendly name for the operation. The id MUST be unique among all operations described in the API. 
            Tools and libraries MAY use the operation id to uniquely identify an operation.
            </summary>
            <remarks>
            The value MUST be alphanumeric and may include underscores. Whitespsace characters are not allowed.
            </remarks>
        </member>
        <member name="P:Swagger.ObjectModel.Operation.Consumes">
            <summary>
            A list of MIME types this operation can consume.
            This is overrides the global consumes definition at the root of the API Declaration.
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.Operation.Produces">
            <summary>
            A list of MIME types this operation can produce.
            This is overrides the global produces definition at the root of the API Declaration.
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.Operation.Parameters">
            <summary>
            A list of parameters that are applicable for this operation. 
            If a parameter is already defined at the Path Item, the new definition will override it, but can never remove it. 
            The list MUST NOT include duplicated parameters. A unique parameter is defined by a combination of a name and location. 
            The list can use the Reference Object to link to parameters that are defined at the Swagger Object's parameters. 
            There can be one "body" parameter at most.
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.Operation.Responses">
            <summary>
            Lists the possible response statuses that can return from the operation.
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.Operation.Schemes">
            <summary>
            The transfer protocol for the operation.
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.Operation.Deprecated">
            <summary>
            Declares this operation to be deprecated.
            Usage of the declared operation should be refrained.
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.Operation.SecurityRequirements">
            <summary>
            A declaration of which security schemes are applied for this operation. 
            The list of values describes alternative security schemes that can be used (that is, there is a logical OR between the security requirements). 
            This definition overrides any declared top-level security. 
            To remove a top-level security declaration, an empty array can be used.
            </summary>
        </member>
        <member name="T:Swagger.ObjectModel.ParameterIn">
            <summary>
            An enum representing the type of an operation parameter.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.ParameterIn.Path">
            <summary>
            Denotes a path parameter.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.ParameterIn.Query">
            <summary>
            Denotes a query parameter.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.ParameterIn.Body">
            <summary>
            Denotes a body parameter.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.ParameterIn.Header">
            <summary>
            Denotes a header parameter.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.ParameterIn.Form">
            <summary>
            Denotes a form parameter.
            </summary>
        </member>
        <member name="T:Swagger.ObjectModel.Response">
            <summary>
            Describes a single response from an API Operation.
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.Response.Description">
            <summary>
            A short description of the response. GFM syntax can be used for rich text representation.
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.Response.Schema">
            <summary>
            A definition of the response structure. 
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.Response.Headers">
            <summary>
            A list of headers that are sent with the response.
            The name of the property corresponds to the name of the header. The value describes the type of the header.
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.Response.Examples">
            <summary>
            An example of the response message. 
            The name of the property MUST be one of the Operation produces values (either implicit or inherited). 
            The value SHOULD be an example of what such a response would look like.
            </summary>
        </member>
        <member name="T:Swagger.ObjectModel.Builders.ResponseBuilder">
            <summary>
            The response builder.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.ResponseBuilder.description">
            <summary>
            The description.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.ResponseBuilder.schema">
            <summary>
            The schema.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.ResponseBuilder.headers">
            <summary>
            The headers.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.ResponseBuilder.examples">
            <summary>
            The examples.
            </summary>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.ResponseBuilder.Build">
            <summary>
            The build.
            </summary>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Response"/>.
            </returns>
            <exception cref="T:Swagger.ObjectModel.Builders.RequiredFieldException">
            </exception>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.ResponseBuilder.Description(System.String)">
            <summary>
            The description.
            </summary>
            <param name="description">
            The description.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.ResponseBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.ResponseBuilder.Schema(Swagger.ObjectModel.Schema)">
            <summary>
            The schema.
            </summary>
            <param name="schema">
            The schema.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.ResponseBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.ResponseBuilder.Schema``1(System.Action{Swagger.ObjectModel.Builders.SchemaBuilder{``0}})">
            <summary>
            The schema.
            </summary>
            <param name="schema">
            The schema.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.ResponseBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.ResponseBuilder.Schema``1">
            <summary>
            The schema.
            </summary>
            <param name="schema">
            The schema.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.ResponseBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.ResponseBuilder.Header(System.String,Swagger.ObjectModel.Header)">
            <summary>
            The header.
            </summary>
            <param name="headerName">
            The header name.
            </param>
            <param name="header">
            The header.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.ResponseBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.ResponseBuilder.Header(System.String,Swagger.ObjectModel.Builders.HeaderBuilder)">
            <summary>
            The header.
            </summary>
            <param name="headerName">
            The header name.
            </param>
            <param name="header">
            The header.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.ResponseBuilder"/>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.ResponseBuilder.Example(System.String,System.Object)">
            <summary>
            The example.
            </summary>
            <param name="mimeType">
            The mime type.
            </param>
            <param name="example">
            The example.
            </param>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Builders.ResponseBuilder"/>.
            </returns>
        </member>
        <member name="T:Swagger.ObjectModel.Item">
            <summary>
            This object is used to describe the value types used inside an array.
            </summary>
            <example>
            For a primitive type:
            <code>
            {
              "type": "string"
            }
            </code>
            For a complex type:
            <code>
            {
              "$ref": "Pet"
            }
            </code>
            </example>
        </member>
        <member name="T:Swagger.ObjectModel.Primitive">
            <summary>
            Represents a primitive Swagger data type.
            </summary>
        </member>
        <member name="M:Swagger.ObjectModel.Primitive.FromType(System.Type)">
            <summary>
            Gets primitive data about the given type.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">If the given type isn't a primitive.</exception>
            <param name="type">The type to get primitive data from.</param>
            <returns>Primitive data about the given type.</returns>
        </member>
        <member name="M:Swagger.ObjectModel.Primitive.IsPrimitive(System.Type)">
            <summary>
            Determines whether the type is defined as a Swagger primitive.
            </summary>
            <param name="type">The type to check.</param>
            <returns><c>true</c> if the type is a primitive, otherwise <c>false</c>.</returns>
        </member>
        <member name="P:Swagger.ObjectModel.Primitive.Type">
            <summary>
            The primitive type.
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.Primitive.Format">
            <summary>
            The format of the type, or <c>null</c>.
            </summary>
        </member>
        <member name="T:Swagger.ObjectModel.AuthorizationType">
            <summary>
            An enum representing the type of the authorization scheme.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.AuthorizationType.BasicAuth">
            <summary>
            Basic HTTP authentication.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.AuthorizationType.ApiKey">
            <summary>
            API-key based authentication.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.AuthorizationType.OAuth2">
            <summary>
            OAuth2 based authentication.
            </summary>
        </member>
        <member name="T:Swagger.ObjectModel.Contact">
            <summary>
            The contact.
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.Contact.Name">
            <summary>
            Gets or sets the name.
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.Contact.Url">
            <summary>
            Gets or sets the url.
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.Contact.EmailAddress">
            <summary>
            Gets or sets the email address.
            </summary>
        </member>
        <member name="T:Swagger.ObjectModel.Info">
            <summary>
            The Info object provides metadata about the API.
            The metadata can be used by the clients if needed, and can be presented in the Swagger-UI for convenience.
            </summary>
            <example>
            <code>
            {
              "title": "Swagger Sample App",
              "description": "This is a sample server Petstore server.",
              "termsOfServiceUrl": "http://helloreverb.com/terms/",
              "contact": "apiteam@wordnik.com",
              "license": "Apache 2.0",
              "licenseUrl": "http://www.apache.org/licenses/LICENSE-2.0.html"
            }
            </code>
            </example>
        </member>
        <member name="P:Swagger.ObjectModel.Info.Title">
            <summary>
            The title of the application.
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.Info.Description">
            <summary>
            A short description of the application.
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.Info.TermsOfService">
            <summary>
            The Terms of Service for the API.
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.Info.Contact">
            <summary>
            The contact information for the exposed API.
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.Info.License">
            <summary>
            The license information for the exposed API.
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.Info.Version">
            <summary>
            Provides the version of the application API (not to be confused by the specification version).
            </summary>
        </member>
        <member name="T:Swagger.ObjectModel.License">
            <summary>
            The license.
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.License.Name">
            <summary>
            Gets or sets the name.
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.License.Url">
            <summary>
            Gets or sets the url.
            </summary>
        </member>
        <member name="T:Swagger.ObjectModel.OAuth2Scope">
            <summary>
            Describes an OAuth2 authorization scope.
            </summary>
            <example>
            <code>
            {
              "scope": "email",
              "description": "Access to your email address"
            }
            </code>
            </example>
        </member>
        <member name="P:Swagger.ObjectModel.OAuth2Scope.Scope">
            <summary>
            The name of the scope.
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.OAuth2Scope.Description">
            <summary>
            A short description of the scope.
            </summary>
        </member>
        <member name="T:Swagger.ObjectModel.PathItem">
            <summary>
            The path item.
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.PathItem.Get">
            <summary>
            Gets or sets the GET operation.
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.PathItem.Put">
            <summary>
            Gets or sets the PUT operation.
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.PathItem.Post">
            <summary>
            Gets or sets the POST operation.
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.PathItem.Delete">
            <summary>
            Gets or sets the DELETE operation.
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.PathItem.Options">
            <summary>
            Gets or sets the OPTIONS operation.
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.PathItem.Head">
            <summary>
            Gets or sets the HEAD operation.
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.PathItem.Patch">
            <summary>
            Gets or sets the HEAD operation.
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.PathItem.Parameters">
            <summary>
            Gets or sets the parameters.
            </summary>
        </member>
        <member name="T:Swagger.ObjectModel.Schema">
            <summary>
            The schema.
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.Schema.Discriminator">
            <summary>
            Adds support for polymorphism. The discriminator is the schema property name that is used to differentiate between other schema that inherit this schema. 
            The property name used MUST be defined at this schema and it MUST be in the required property list. 
            When used, the value MUST be the name of this schema or any schema that inherits it.
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.Schema.ReadOnly">
            <summary>
            Relevant only for Schema "properties" definitions. Declares the property as "read only". 
            This means that it MAY be sent as part of a response but MUST NOT be sent as part of the request. 
            Properties marked as readOnly being true SHOULD NOT be in the required list of the defined schema. 
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.Schema.ExternalDocumentation">
            <summary>
            Additional external documentation for this schema.
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.Schema.Example">
            <summary>
            A free-form property to include a an example of an instance for this schema.
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.Schema.Properties">
            <summary>
            Collection of child members
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.Schema.Required">
            <summary>
            An object instance is valid against this keyword if its property set contains all elements in this keyword's array value.
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.Schema.AllOf">
            <summary>
            An instance validates successfully against this keyword if it validates successfully against all schemas defined by this keyword's value.
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.Schema.Description">
            <summary>
            A brief description of this schema.
            </summary>
        </member>
        <member name="T:Swagger.ObjectModel.Builders.SchemaBuilder`1">
            <summary>
            The schema builder.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.SchemaBuilder`1.discriminator">
            <summary>
            The discriminator.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.SchemaBuilder`1.readOnly">
            <summary>
            The read only.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.SchemaBuilder`1.documentation">
            <summary>
            The documentation.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Builders.SchemaBuilder`1.example">
            <summary>
            The example.
            </summary>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.SchemaBuilder`1.Property``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Access a <see cref="T:Swagger.ObjectModel.Builders.SchemaBuilder`1"/> for a given property of the model.
            </summary>
            <param name="expression">An <see cref="T:System.Linq.Expressions.Expression`1"/> for accessing the property.</param>
            <returns>The <see cref="T:Swagger.ObjectModel.Builders.SchemaBuilder`1"/> instance.</returns>
        </member>
        <member name="M:Swagger.ObjectModel.Builders.SchemaBuilder`1.Build">
            <summary>
            The build.
            </summary>
            <returns>
            The <see cref="T:Swagger.ObjectModel.Schema"/>.
            </returns>
        </member>
        <member name="T:Swagger.ObjectModel.SecurityScheme">
            <summary>
            The security scheme.
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.SecurityScheme.Type">
            <summary>
            The type of the security scheme
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.SecurityScheme.Description">
            <summary>
            A short description for security scheme.
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.SecurityScheme.Name">
            <summary>
            The name of the header or query parameter to be used.
            </summary>
            <remarks>
            Valid and required when <see cref="P:Swagger.ObjectModel.SecurityScheme.Type"/> is <see cref="F:Swagger.ObjectModel.SecuritySchemes.ApiKey"/>
            </remarks>
        </member>
        <member name="P:Swagger.ObjectModel.SecurityScheme.In">
            <summary>
            The location of the API key.
            </summary>
            <remarks>
            Valid and required when <see cref="P:Swagger.ObjectModel.SecurityScheme.Type"/> is <see cref="F:Swagger.ObjectModel.SecuritySchemes.ApiKey"/>
            </remarks>
        </member>
        <member name="P:Swagger.ObjectModel.SecurityScheme.Flow">
            <summary>
            The flow used by the OAuth2 security scheme.
            </summary>
            <remarks>
            Valid and required when <see cref="P:Swagger.ObjectModel.SecurityScheme.Type"/> is <see cref="F:Swagger.ObjectModel.SecuritySchemes.Oauth2"/>
            and <see cref="P:Swagger.ObjectModel.SecurityScheme.Flow"/> is <see cref="F:Swagger.ObjectModel.Oauth2Flows.AccessCode"/> or <see cref="F:Swagger.ObjectModel.Oauth2Flows.Implicit"/>
            </remarks>
        </member>
        <member name="P:Swagger.ObjectModel.SecurityScheme.AuthorizationUrl">
            <summary>
            The authorization URL to be used for this flow. This SHOULD be in the form of a URL.
            </summary>
            <remarks>
            Valid and required when <see cref="P:Swagger.ObjectModel.SecurityScheme.Type"/> is <see cref="F:Swagger.ObjectModel.SecuritySchemes.Oauth2"/>
            and <see cref="P:Swagger.ObjectModel.SecurityScheme.Flow"/> is <see cref="F:Swagger.ObjectModel.Oauth2Flows.AccessCode"/> or <see cref="F:Swagger.ObjectModel.Oauth2Flows.Implicit"/>
            </remarks>
        </member>
        <member name="P:Swagger.ObjectModel.SecurityScheme.TokenUrl">
            <summary>
            The token URL to be used for this flow. This SHOULD be in the form of a URL.
            </summary>
            <remarks>
            Valid and required when <see cref="P:Swagger.ObjectModel.SecurityScheme.Type"/> is <see cref="F:Swagger.ObjectModel.SecuritySchemes.Oauth2"/>
            and <see cref="P:Swagger.ObjectModel.SecurityScheme.Flow"/> is <see cref="F:Swagger.ObjectModel.Oauth2Flows.AccessCode"/> or <see cref="F:Swagger.ObjectModel.Oauth2Flows.Application"/> or <see cref="F:Swagger.ObjectModel.Oauth2Flows.Password"/>
            </remarks>
        </member>
        <member name="P:Swagger.ObjectModel.SecurityScheme.Scopes">
            <summary>
            Lists the available scopes for an OAuth2 security scheme.
            </summary>
            <remarks>
            Maps between a name of a scope to a short description of it (as the value of the property).
            Valid and required when <see cref="P:Swagger.ObjectModel.SecurityScheme.Type"/> is <see cref="F:Swagger.ObjectModel.SecuritySchemes.Oauth2"/>
            </remarks>
        </member>
        <member name="T:Swagger.ObjectModel.SecuritySchemes">
            <summary>
            The security scheme type.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.SecuritySchemes.Basic">
            <summary>
            The basic.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.SecuritySchemes.ApiKey">
            <summary>
            The api key.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.SecuritySchemes.Oauth2">
            <summary>
            The oauth 2.
            </summary>
        </member>
        <member name="T:Swagger.ObjectModel.SwaggerRoot">
            <summary>
            The swagger root.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.SwaggerRoot.Version">
            <summary>
            The swagger version.
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.SwaggerRoot.SwaggerVersion">
            <summary>
            Specifies the Swagger Specification version being used.
            It can be used by the Swagger UI and other clients to interpret the API listing.
            </summary>
            <remarks>
            The value MUST be an existing Swagger specification version.
            </remarks>
        </member>
        <member name="P:Swagger.ObjectModel.SwaggerRoot.Info">
            <summary>
            Provides metadata about the API. The metadata can be used by the clients if needed, and can be presented in the Swagger-UI for convenience.
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.SwaggerRoot.Host">
            <summary>
            The host (name or ip) serving the API. This MUST be the host only and does not include the scheme nor sub-paths. 
            It MAY include a port. If the host is not included, the host serving the documentation is to be used (including the port). 
            The host does not support path templating.
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.SwaggerRoot.BasePath">
            <summary>
            The base path on which the API is served, which is relative to the host. If it is not included, the API is served directly under the host. 
            The value MUST start with a leading slash (/). The basePath does not support path templating.
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.SwaggerRoot.Schemes">
            <summary>
            The transfer protocol of the API. Values MUST be from the list: "http", "https", "ws", "wss". 
            If the schemes is not included, the default scheme to be used is the one used to access the specification.
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.SwaggerRoot.Consumes">
            <summary>
            A list of MIME types the APIs can consume. This is global to all APIs but can be overridden on specific API calls. 
            Value MUST be as described under Mime Types.
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.SwaggerRoot.Produces">
            <summary>
            A list of MIME types the APIs can produce. This is global to all APIs but can be overridden on specific API calls. 
            Value MUST be as described under Mime Types.
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.SwaggerRoot.Paths">
            <summary>
            The available paths and operations for the API.
            Key: A relative path to an individual endpoint. The field name MUST begin with a slash. 
            The path is appended to the basePath in order to construct the full URL. Path templating is allowed.
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.SwaggerRoot.Definitions">
            <summary>
            An object to hold data types produced and consumed by operations.
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.SwaggerRoot.Parameters">
            <summary>
            An object to hold parameters that can be used across operations. This property does not define global parameters for all operations.
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.SwaggerRoot.Responses">
            <summary>
            An object to hold responses that can be used across operations. This property does not define global responses for all operations.
            A single response definition, mapping a "name" to the response it defines.
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.SwaggerRoot.SecurityDefinitions">
            <summary>
            A declaration of the security schemes available to be used in the specification. 
            This does not enforce the security schemes on the operations and only serves to provide the relevant details for each scheme.
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.SwaggerRoot.Security">
            <summary>
            Lists the required security schemes to execute this operation. 
            The object can have multiple security schemes declared in it which are all required (that is, there is a logical AND between the schemes).
            The name used for each property MUST correspond to a security scheme declared in the Security Definitions.
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.SwaggerRoot.Tags">
            <summary>
            A list of tags used by the specification with additional metadata. 
            The order of the tags can be used to reflect on their order by the parsing tools. 
            Not all tags that are used by the Operation Object must be declared. 
            The tags that are not declared may be organized randomly or based on the tools' logic. 
            Each tag name in the list MUST be unique.
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.SwaggerRoot.ExternalDocumentation">
            <summary>
            Additional external documentation.
            </summary>
        </member>
        <member name="T:Swagger.ObjectModel.Schemes">
            <summary>
            The schemes.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Schemes.Http">
            <summary>
            The http.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Schemes.Https">
            <summary>
            The https.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Schemes.Ws">
            <summary>
            The ws.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.Schemes.Wss">
            <summary>
            The wss.
            </summary>
        </member>
        <member name="T:Swagger.ObjectModel.Tag">
            <summary>
            The tag.
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.Tag.Name">
            <summary>
            The name of the tag
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.Tag.Description">
            <summary>
            A short description of the tag
            </summary>
        </member>
        <member name="P:Swagger.ObjectModel.Tag.ExternalDocumentation">
            <summary>
            Additional external documentation for this tag
            </summary>
        </member>
        <member name="T:Swagger.ObjectModel.JsonArray">
            <summary>
            Represents the json array.
            </summary>
        </member>
        <member name="M:Swagger.ObjectModel.JsonArray.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Swagger.ObjectModel.JsonArray"/> class. 
            </summary>
        </member>
        <member name="M:Swagger.ObjectModel.JsonArray.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Swagger.ObjectModel.JsonArray"/> class. 
            </summary>
            <param name="capacity">The capacity of the json array.</param>
        </member>
        <member name="M:Swagger.ObjectModel.JsonArray.ToString">
            <summary>
            The json representation of the array.
            </summary>
            <returns>The json representation of the array.</returns>
        </member>
        <member name="T:Swagger.ObjectModel.JsonObject">
            <summary>
            Represents the json object.
            </summary>
        </member>
        <member name="F:Swagger.ObjectModel.JsonObject._members">
            <summary>
            The internal member dictionary.
            </summary>
        </member>
        <member name="M:Swagger.ObjectModel.JsonObject.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Swagger.ObjectModel.JsonObject"/>.
            </summary>
        </member>
        <member name="M:Swagger.ObjectModel.JsonObject.#ctor(System.Collections.Generic.IEqualityComparer{System.String})">
            <summary>
            Initializes a new instance of <see cref="T:Swagger.ObjectModel.JsonObject"/>.
            </summary>
            <param name="comparer">The <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> implementation to use when comparing keys, or null to use the default <see cref="T:System.Collections.Generic.EqualityComparer`1"/> for the type of the key.</param>
        </member>
        <member name="M:Swagger.ObjectModel.JsonObject.Add(System.String,System.Object)">
            <summary>
            Adds the specified key.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Swagger.ObjectModel.JsonObject.ContainsKey(System.String)">
            <summary>
            Determines whether the specified key contains key.
            </summary>
            <param name="key">The key.</param>
            <returns>
                <c>true</c> if the specified key contains key; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.JsonObject.Remove(System.String)">
            <summary>
            Removes the specified key.
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:Swagger.ObjectModel.JsonObject.TryGetValue(System.String,System.Object@)">
            <summary>
            Tries the get value.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Swagger.ObjectModel.JsonObject.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
            Adds the specified item.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:Swagger.ObjectModel.JsonObject.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:Swagger.ObjectModel.JsonObject.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
            Determines whether [contains] [the specified item].
            </summary>
            <param name="item">The item.</param>
            <returns>
            	<c>true</c> if [contains] [the specified item]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.JsonObject.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
            <summary>
            Copies to.
            </summary>
            <param name="array">The array.</param>
            <param name="arrayIndex">Index of the array.</param>
        </member>
        <member name="M:Swagger.ObjectModel.JsonObject.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
            Removes the specified item.
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:Swagger.ObjectModel.JsonObject.GetEnumerator">
            <summary>
            Gets the enumerator.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Swagger.ObjectModel.JsonObject.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.JsonObject.ToString">
            <summary>
            Returns a json <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A json <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="P:Swagger.ObjectModel.JsonObject.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:System.Object"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="P:Swagger.ObjectModel.JsonObject.Keys">
            <summary>
            Gets the keys.
            </summary>
            <value>The keys.</value>
        </member>
        <member name="P:Swagger.ObjectModel.JsonObject.Values">
            <summary>
            Gets the values.
            </summary>
            <value>The values.</value>
        </member>
        <member name="P:Swagger.ObjectModel.JsonObject.Item(System.String)">
            <summary>
            Gets or sets the <see cref="T:System.Object"/> with the specified key.
            </summary>
            <value></value>
        </member>
        <member name="P:Swagger.ObjectModel.JsonObject.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:Swagger.ObjectModel.JsonObject.IsReadOnly">
            <summary>
            Gets a value indicating whether this instance is read only.
            </summary>
            <value>
            	<c>true</c> if this instance is read only; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Swagger.ObjectModel.SimpleJson">
            <summary>
            This class encodes and decodes JSON strings.
            Spec. details, see http://www.json.org/
            
            JSON uses Arrays and Objects. These correspond here to the datatypes JsonArray(IList&lt;object>) and JsonObject(IDictionary&lt;string,object>).
            All numbers are parsed to doubles.
            </summary>
        </member>
        <member name="M:Swagger.ObjectModel.SimpleJson.DeserializeObject(System.String)">
            <summary>
            Parses the string json into a value
            </summary>
            <param name="json">A JSON string.</param>
            <returns>An IList&lt;object>, a IDictionary&lt;string,object>, a double, a string, null, true, or false</returns>
        </member>
        <member name="M:Swagger.ObjectModel.SimpleJson.TryDeserializeObject(System.String,System.Object@)">
            <summary>
            Try parsing the json string into a value.
            </summary>
            <param name="json">
            A JSON string.
            </param>
            <param name="obj">
            The object.
            </param>
            <returns>
            Returns true if successfull otherwise false.
            </returns>
        </member>
        <member name="M:Swagger.ObjectModel.SimpleJson.SerializeObject(System.Object,Swagger.ObjectModel.IJsonSerializerStrategy)">
            <summary>
            Converts a IDictionary&lt;string,object> / IList&lt;object> object into a JSON string
            </summary>
            <param name="json">A IDictionary&lt;string,object> / IList&lt;object></param>
            <param name="jsonSerializerStrategy">Serializer strategy to use</param>
            <returns>A JSON encoded string, or null if object 'json' is not serializable</returns>
        </member>
        <member name="M:Swagger.ObjectModel.SimpleJson.IsNumeric(System.Object)">
            <summary>
            Determines if a given object is numeric in any way
            (can be integer, double, null, etc).
            </summary>
        </member>
    </members>
</doc>
